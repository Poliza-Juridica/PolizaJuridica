// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PolizaJuridica.Data;

namespace PolizaJuridica.Migrations
{
    [DbContext(typeof(PolizaJuridicaDbContext))]
    [Migration("20190423030419_complementodomicilio")]
    partial class complementodomicilio
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PolizaJuridica.Data.Area", b =>
                {
                    b.Property<int>("AreaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AreaDescripcion");

                    b.HasKey("AreaId");

                    b.ToTable("Area");
                });

            modelBuilder.Entity("PolizaJuridica.Data.Calendario", b =>
                {
                    b.Property<int>("CalendarioId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CalendarioDescripcion");

                    b.Property<string>("CalendarioEstatus");

                    b.Property<DateTime>("CalendarioFechaFirma");

                    b.Property<string>("CalendarioUbicación");

                    b.Property<int>("FisicaMoralId");

                    b.Property<int?>("UsuariosId");

                    b.HasKey("CalendarioId");

                    b.HasIndex("FisicaMoralId");

                    b.HasIndex("UsuariosId");

                    b.ToTable("Calendario");
                });

            modelBuilder.Entity("PolizaJuridica.Data.CentroCostos", b =>
                {
                    b.Property<int>("CentroCostosId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CentroCostosMonto");

                    b.Property<int>("CentroCostosRentaFinal");

                    b.Property<int>("CentroCostosRentaInicial");

                    b.Property<string>("CentroCostosTipo");

                    b.HasKey("CentroCostosId");

                    b.ToTable("CentroCostos");
                });

            modelBuilder.Entity("PolizaJuridica.Data.DocumentoPlantilla", b =>
                {
                    b.Property<int>("DocumentoPlantillaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DocumentoCarta");

                    b.Property<bool>("DocumentoFiador");

                    b.Property<bool>("DocumentoInmueble");

                    b.Property<string>("DocumentoOriginal");

                    b.Property<bool>("DocumentoPagare");

                    b.Property<string>("DocumentoPlantillaNombre");

                    b.Property<string>("DocumentoPlantillaTipo");

                    b.Property<string>("DocumentoPlantillaXml");

                    b.Property<int?>("EstadosId");

                    b.HasKey("DocumentoPlantillaId");

                    b.HasIndex("EstadosId");

                    b.ToTable("DocumentoPlantilla");
                });

            modelBuilder.Entity("PolizaJuridica.Data.Documentos", b =>
                {
                    b.Property<int>("DocumentosId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DocumentoDesc");

                    b.Property<string>("DocumentosImagen");

                    b.Property<int>("FisicaMoralId");

                    b.Property<int>("TipoDocumentoId");

                    b.HasKey("DocumentosId");

                    b.HasIndex("FisicaMoralId");

                    b.HasIndex("TipoDocumentoId");

                    b.ToTable("Documentos");
                });

            modelBuilder.Entity("PolizaJuridica.Data.Estados", b =>
                {
                    b.Property<int>("EstadosId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoPostal");

                    b.Property<string>("EstadoNombre");

                    b.HasKey("EstadosId");

                    b.ToTable("Estados");
                });

            modelBuilder.Entity("PolizaJuridica.Data.FiadorF", b =>
                {
                    b.Property<int>("FiadorFId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FiadorFApeMaterno");

                    b.Property<string>("FiadorFApeMaternoConyuge");

                    b.Property<string>("FiadorFApePaterno");

                    b.Property<string>("FiadorFApePaternoConyuge");

                    b.Property<string>("FiadorFCelular");

                    b.Property<int>("FiadorFCodigoPostal");

                    b.Property<int>("FiadorFCodigoPostalGarantia");

                    b.Property<string>("FiadorFColonia");

                    b.Property<string>("FiadorFColoniaGarantia");

                    b.Property<string>("FiadorFCondicionMigratoria");

                    b.Property<string>("FiadorFConvenioEC");

                    b.Property<string>("FiadorFDelegacion");

                    b.Property<string>("FiadorFDelegaciónGarantia");

                    b.Property<string>("FiadorFDomicilio");

                    b.Property<string>("FiadorFDomicilioGarantia");

                    b.Property<string>("FiadorFEmail");

                    b.Property<string>("FiadorFEmpresa");

                    b.Property<string>("FiadorFEstado");

                    b.Property<string>("FiadorFEstadoCivil");

                    b.Property<string>("FiadorFEstadoGarantia");

                    b.Property<string>("FiadorFNacionalidad");

                    b.Property<string>("FiadorFNombres");

                    b.Property<string>("FiadorFNombresConyuge");

                    b.Property<string>("FiadorFParentesco");

                    b.Property<string>("FiadorFProfesion");

                    b.Property<string>("FiadorFTelefono");

                    b.Property<string>("FiadorFTelefonoEmpresa");

                    b.Property<int>("FisicaMoralId");

                    b.HasKey("FiadorFId");

                    b.HasIndex("FisicaMoralId");

                    b.ToTable("FiadorF");
                });

            modelBuilder.Entity("PolizaJuridica.Data.FiadorM", b =>
                {
                    b.Property<int>("FiadorMId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FiaddorMRazonSocial");

                    b.Property<string>("FiadorMApeMaternoRLegal");

                    b.Property<string>("FiadorMApePaternoRLegal");

                    b.Property<string>("FiadorMCelularRLegal");

                    b.Property<string>("FiadorMColiniaGarantia");

                    b.Property<string>("FiadorMColonia");

                    b.Property<string>("FiadorMColoniaRLegal");

                    b.Property<string>("FiadorMDelegacion");

                    b.Property<string>("FiadorMDelegacionGarantia");

                    b.Property<string>("FiadorMDelegacionRLegal");

                    b.Property<string>("FiadorMDomicilio");

                    b.Property<string>("FiadorMDomicilioGarantia");

                    b.Property<string>("FiadorMDomicilioRLegal");

                    b.Property<string>("FiadorMEmailRLegal");

                    b.Property<string>("FiadorMGiro");

                    b.Property<string>("FiadorMMActaNo");

                    b.Property<string>("FiadorMNCMRlegal");

                    b.Property<string>("FiadorMNacionalidadRLegal");

                    b.Property<string>("FiadorMNombresRLegal");

                    b.Property<string>("FiadorMPoderRepNo");

                    b.Property<string>("FiadorMPuestoRLegal");

                    b.Property<string>("FiadorMRFC");

                    b.Property<string>("FiadorMTelefono");

                    b.Property<string>("FiadorMTelefonoRLegat");

                    b.Property<string>("FiadorMWeb");

                    b.Property<int>("FisicaMoralId");

                    b.HasKey("FiadorMId");

                    b.HasIndex("FisicaMoralId");

                    b.ToTable("FiadorM");
                });

            modelBuilder.Entity("PolizaJuridica.Data.FisicaMoral", b =>
                {
                    b.Property<int>("FisicaMoralId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActaConstitutiva");

                    b.Property<bool>("AfianzadoRL");

                    b.Property<string>("AfianzadoraRL");

                    b.Property<string>("ColoniaRL");

                    b.Property<string>("DeleMuni");

                    b.Property<string>("DomicilioRepresentanteLegal");

                    b.Property<string>("EmailRL");

                    b.Property<string>("EstadoRL");

                    b.Property<string>("HorarioRL");

                    b.Property<decimal>("IngresoMensualRL");

                    b.Property<string>("PoderRepresentanteNo");

                    b.Property<bool>("RequiereFacturaRL");

                    b.Property<int>("SFisicaAntiguedad");

                    b.Property<string>("SFisicaApeMat");

                    b.Property<string>("SFisicaApePat");

                    b.Property<string>("SFisicaCelular");

                    b.Property<string>("SFisicaCodigoPostal");

                    b.Property<string>("SFisicaCodigoPostalTrabajo");

                    b.Property<string>("SFisicaColonia");

                    b.Property<string>("SFisicaColoniaTrabajo");

                    b.Property<string>("SFisicaCondMigratoria");

                    b.Property<string>("SFisicaConvenioEC");

                    b.Property<string>("SFisicaDelegMuniTrabajo");

                    b.Property<string>("SFisicaDelegacionMunicipio");

                    b.Property<string>("SFisicaDomicilio");

                    b.Property<string>("SFisicaDomicilioTrabajo");

                    b.Property<string>("SFisicaEmail");

                    b.Property<string>("SFisicaEmailJefe");

                    b.Property<string>("SFisicaEstado");

                    b.Property<string>("SFisicaEstadoCivil");

                    b.Property<string>("SFisicaEstadoTrabajo");

                    b.Property<bool>("SFisicaFactura");

                    b.Property<string>("SFisicaGiroTrabajo");

                    b.Property<string>("SFisicaHorario");

                    b.Property<decimal>("SFisicaIngresoMensual");

                    b.Property<string>("SFisicaJefeTrabajo");

                    b.Property<string>("SFisicaNacionallidad");

                    b.Property<string>("SFisicaNombre");

                    b.Property<string>("SFisicaProfesion");

                    b.Property<string>("SFisicaPuesto");

                    b.Property<string>("SFisicaPuestoJefe");

                    b.Property<string>("SFisicaRFC");

                    b.Property<string>("SFisicaRazonSocial");

                    b.Property<string>("SFisicaTelefono");

                    b.Property<string>("SFisicaTelefonoTrabajo");

                    b.Property<string>("SFisicaTrabajo");

                    b.Property<string>("SFisicaWebTrabajo");

                    b.Property<string>("SindicadoRL");

                    b.Property<int>("SolicitudId");

                    b.Property<string>("TelefonoRL");

                    b.HasKey("FisicaMoralId");

                    b.HasIndex("SolicitudId");

                    b.ToTable("FisicaMoral");
                });

            modelBuilder.Entity("PolizaJuridica.Data.Log", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("LogFecha");

                    b.Property<string>("LogObjetoIn");

                    b.Property<string>("LogObjetoOut");

                    b.Property<string>("LogPantalla");

                    b.Property<string>("LogProceso");

                    b.HasKey("LogId");

                    b.ToTable("Log");
                });

            modelBuilder.Entity("PolizaJuridica.Data.MenuP", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AreaId");

                    b.Property<string>("Controlador");

                    b.Property<int?>("MenuPPadreId");

                    b.Property<string>("Nombre");

                    b.Property<string>("Pantalla");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("MenuPPadreId");

                    b.ToTable("MenuP");
                });

            modelBuilder.Entity("PolizaJuridica.Data.Parametros", b =>
                {
                    b.Property<int>("ParametrosId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ParametroNombre");

                    b.Property<string>("ParametroValor");

                    b.Property<string>("ParametroValor1");

                    b.Property<string>("ParametroValor2");

                    b.Property<string>("ParametroValor3");

                    b.Property<string>("ParametroValor4");

                    b.Property<string>("ParametroValorNumerico");

                    b.HasKey("ParametrosId");

                    b.ToTable("Parametros");
                });

            modelBuilder.Entity("PolizaJuridica.Data.PersonasOcupanInm", b =>
                {
                    b.Property<int>("PersonasOcupanInmId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FisicaMoralId");

                    b.Property<string>("PersonasOcupanInmNombre");

                    b.Property<int>("TipoParentescoId");

                    b.HasKey("PersonasOcupanInmId");

                    b.HasIndex("FisicaMoralId");

                    b.HasIndex("TipoParentescoId");

                    b.ToTable("PersonasOcupanInm");
                });

            modelBuilder.Entity("PolizaJuridica.Data.Poliza", b =>
                {
                    b.Property<int>("PolizaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Creacion");

                    b.Property<int?>("FiadorFId");

                    b.Property<int?>("FiadorMId");

                    b.Property<int?>("FisicaMoralId");

                    b.Property<int>("PolizaEstatusId");

                    b.Property<DateTime>("fechaEstatus");

                    b.HasKey("PolizaId");

                    b.HasIndex("FiadorFId");

                    b.HasIndex("FiadorMId");

                    b.HasIndex("FisicaMoralId");

                    b.HasIndex("PolizaEstatusId");

                    b.ToTable("Poliza");
                });

            modelBuilder.Entity("PolizaJuridica.Data.PolizaEstatus", b =>
                {
                    b.Property<int>("PolizaEstatusId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion");

                    b.HasKey("PolizaEstatusId");

                    b.ToTable("PolizaEstatus");
                });

            modelBuilder.Entity("PolizaJuridica.Data.RefArrendamiento", b =>
                {
                    b.Property<int>("RefArrendamientoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FisicaMoralId");

                    b.Property<string>("RefArrenApeMaterno");

                    b.Property<string>("RefArrenApePaterno");

                    b.Property<string>("RefArrenDomicilio");

                    b.Property<decimal>("RefArrenMonto");

                    b.Property<string>("RefArrenMotivoCambio");

                    b.Property<string>("RefArrenNombres");

                    b.Property<string>("RefArrenTelefono");

                    b.HasKey("RefArrendamientoId");

                    b.HasIndex("FisicaMoralId");

                    b.ToTable("RefArrendamiento");
                });

            modelBuilder.Entity("PolizaJuridica.Data.ReferenciaComercial", b =>
                {
                    b.Property<int>("ReferenciaComercialId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FisicaMoralId");

                    b.Property<string>("RCDetalle");

                    b.Property<string>("RCREpresenta");

                    b.Property<int>("TipoRefComercialId");

                    b.HasKey("ReferenciaComercialId");

                    b.HasIndex("FisicaMoralId");

                    b.HasIndex("TipoRefComercialId");

                    b.ToTable("ReferenciaComercial");
                });

            modelBuilder.Entity("PolizaJuridica.Data.ReferenciaPersonal", b =>
                {
                    b.Property<int>("ReferenciaPersonalId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FisicaMoralId");

                    b.Property<string>("RPApePaterno");

                    b.Property<string>("RPNombres");

                    b.Property<string>("RPTelefono");

                    b.Property<string>("RpApeMaterno");

                    b.Property<int>("TipoRefPersonalId");

                    b.HasKey("ReferenciaPersonalId");

                    b.HasIndex("FisicaMoralId");

                    b.HasIndex("TipoRefPersonalId");

                    b.ToTable("ReferenciaPersonal");
                });

            modelBuilder.Entity("PolizaJuridica.Data.Representacion", b =>
                {
                    b.Property<int>("RepresentacionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RepresentacionNombre");

                    b.HasKey("RepresentacionId");

                    b.ToTable("Representacion");
                });

            modelBuilder.Entity("PolizaJuridica.Data.Solicitud", b =>
                {
                    b.Property<int>("SolicitudId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlcaldiaMunicipioActual");

                    b.Property<string>("AlcaldiaMunicipioArrendar");

                    b.Property<string>("ArrendatarioApeMat");

                    b.Property<string>("ArrendatarioApePat");

                    b.Property<string>("ArrendatarioCorreo");

                    b.Property<string>("ArrendatarioNombre");

                    b.Property<string>("ArrendatarioTelefono");

                    b.Property<string>("AsesorNombre");

                    b.Property<int>("Asesorid");

                    b.Property<int>("CentroCostosId");

                    b.Property<string>("CodigoPostalActual");

                    b.Property<string>("CodigoPostalArrendar");

                    b.Property<string>("ColoniaActual");

                    b.Property<string>("ColoniaArrendar");

                    b.Property<string>("CreadorNombre");

                    b.Property<int>("Creadorid");

                    b.Property<string>("DiaPago");

                    b.Property<string>("EstadoActual");

                    b.Property<string>("EstadoArrendar");

                    b.Property<int>("EstadosId");

                    b.Property<string>("RepresentanteNombre");

                    b.Property<int>("Representanteid");

                    b.Property<bool>("SolicitudAdmiInmueble");

                    b.Property<string>("SolicitudApeMaternoLegal");

                    b.Property<string>("SolicitudApeMaternoProp");

                    b.Property<string>("SolicitudApePaternoLegal");

                    b.Property<string>("SolicitudApePaternoProp");

                    b.Property<string>("SolicitudBanco");

                    b.Property<string>("SolicitudCLABE");

                    b.Property<bool>("SolicitudCartaEntrega");

                    b.Property<string>("SolicitudCelular");

                    b.Property<string>("SolicitudCelularProp");

                    b.Property<string>("SolicitudCuenta");

                    b.Property<decimal>("SolicitudCuotaMant");

                    b.Property<decimal>("SolicitudDepositoGarantia");

                    b.Property<string>("SolicitudDestinoArrendamien");

                    b.Property<string>("SolicitudDomicilioProp");

                    b.Property<string>("SolicitudEmail");

                    b.Property<string>("SolicitudEmailProp");

                    b.Property<bool>("SolicitudEsAdminInmueble");

                    b.Property<string>("SolicitudEstatus");

                    b.Property<DateTime>("SolicitudFechaFirma");

                    b.Property<DateTime>("SolicitudFechaSolicitud");

                    b.Property<bool>("SolicitudFiador");

                    b.Property<DateTime>("SolicitudHoraFirma");

                    b.Property<decimal>("SolicitudImporteMensual");

                    b.Property<bool>("SolicitudIncluidaRenta");

                    b.Property<bool>("SolicitudInmuebleGaran");

                    b.Property<string>("SolicitudLugarFirma");

                    b.Property<string>("SolicitudNacionalidad");

                    b.Property<string>("SolicitudNombreCuenta");

                    b.Property<string>("SolicitudNombreProp");

                    b.Property<string>("SolicitudNumero");

                    b.Property<string>("SolicitudObservaciones");

                    b.Property<bool>("SolicitudPagare");

                    b.Property<string>("SolicitudPersonaSolicita");

                    b.Property<string>("SolicitudRFC");

                    b.Property<string>("SolicitudRazonSocial");

                    b.Property<string>("SolicitudRecibodePago");

                    b.Property<string>("SolicitudRepresentanteLegal");

                    b.Property<string>("SolicitudSolicitudNombreCompania");

                    b.Property<string>("SolicitudTelefono");

                    b.Property<bool>("SolicitudTelefonoInmueble");

                    b.Property<string>("SolicitudTelefonoProp");

                    b.Property<string>("SolicitudTipoDeposito");

                    b.Property<string>("SolicitudTipoPoliza");

                    b.Property<int>("SolicitudTipoRegimen");

                    b.Property<string>("SolicitudUbicacionArrendado");

                    b.Property<DateTime>("SolicitudVigenciaContratoF");

                    b.Property<DateTime>("SolicitudVigenciaContratoI");

                    b.Property<string>("TextoCostoPoliza");

                    b.Property<string>("TextoCuotaGarantia");

                    b.Property<string>("TextoDeposito");

                    b.Property<string>("TextoDiaPosteriorVencimiento");

                    b.Property<string>("TextoImporterenta");

                    b.Property<string>("TextoVigenciaFechaF");

                    b.Property<string>("TextoVigenciaFechaI");

                    b.Property<string>("TextoVigenciaFechaIF");

                    b.Property<string>("TipoArrendatario");

                    b.Property<int>("TipoInmobiliarioId");

                    b.HasKey("SolicitudId");

                    b.HasIndex("CentroCostosId");

                    b.HasIndex("EstadosId");

                    b.HasIndex("TipoInmobiliarioId");

                    b.ToTable("Solicitud");
                });

            modelBuilder.Entity("PolizaJuridica.Data.TipoDocumento", b =>
                {
                    b.Property<int>("TipoDocumentoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TipoDocumentoDesc");

                    b.HasKey("TipoDocumentoId");

                    b.ToTable("TipoDocumento");
                });

            modelBuilder.Entity("PolizaJuridica.Data.TipoInmobiliario", b =>
                {
                    b.Property<int>("TipoInmobiliarioId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TipoInmobiliarioDesc");

                    b.HasKey("TipoInmobiliarioId");

                    b.ToTable("TipoInmobiliario");
                });

            modelBuilder.Entity("PolizaJuridica.Data.TipoParentesco", b =>
                {
                    b.Property<int>("TipoParentescoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TipoParentescoDesc");

                    b.HasKey("TipoParentescoId");

                    b.ToTable("TipoParentesco");
                });

            modelBuilder.Entity("PolizaJuridica.Data.TipoRefComercial", b =>
                {
                    b.Property<int>("TipoRefComercialId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TipoDetalleRC");

                    b.Property<string>("TipoRepresentaRC");

                    b.HasKey("TipoRefComercialId");

                    b.ToTable("TipoRefComercial");
                });

            modelBuilder.Entity("PolizaJuridica.Data.TipoRefPersonal", b =>
                {
                    b.Property<int>("TipoRefPersonalId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TipoRefPersonalDesc");

                    b.HasKey("TipoRefPersonalId");

                    b.ToTable("TipoRefPersonal");
                });

            modelBuilder.Entity("PolizaJuridica.Data.Usuarios", b =>
                {
                    b.Property<int>("UsuariosId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AreaId");

                    b.Property<int>("RepresentacionId");

                    b.Property<string>("UsuarioApellidoMaterno");

                    b.Property<string>("UsuarioApellidoPaterno");

                    b.Property<string>("UsuarioContrasenia");

                    b.Property<string>("UsuarioInmobiliaria");

                    b.Property<string>("UsuarioNomCompleto");

                    b.Property<string>("UsuarioNombre");

                    b.Property<string>("UsuarioTelefono");

                    b.Property<string>("UsurioEmail");

                    b.HasKey("UsuariosId");

                    b.HasIndex("AreaId");

                    b.HasIndex("RepresentacionId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("PolizaJuridica.Data.UsuariosSolicitud", b =>
                {
                    b.Property<int>("usuariosSolicitudId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Fecha");

                    b.Property<string>("Observacion");

                    b.Property<string>("Proceso");

                    b.Property<int>("SolicitudId");

                    b.Property<int>("UsuariosId");

                    b.HasKey("usuariosSolicitudId");

                    b.HasIndex("SolicitudId");

                    b.HasIndex("UsuariosId");

                    b.ToTable("UsuariosSolicitud");
                });

            modelBuilder.Entity("PolizaJuridica.Data.Calendario", b =>
                {
                    b.HasOne("PolizaJuridica.Data.FisicaMoral", "fisicaMoral")
                        .WithMany()
                        .HasForeignKey("FisicaMoralId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PolizaJuridica.Data.Usuarios", "Usuarios")
                        .WithMany()
                        .HasForeignKey("UsuariosId");
                });

            modelBuilder.Entity("PolizaJuridica.Data.DocumentoPlantilla", b =>
                {
                    b.HasOne("PolizaJuridica.Data.Estados", "estados")
                        .WithMany()
                        .HasForeignKey("EstadosId");
                });

            modelBuilder.Entity("PolizaJuridica.Data.Documentos", b =>
                {
                    b.HasOne("PolizaJuridica.Data.FisicaMoral", "fisicaMoral")
                        .WithMany()
                        .HasForeignKey("FisicaMoralId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PolizaJuridica.Data.TipoDocumento", "TipoDocumento")
                        .WithMany()
                        .HasForeignKey("TipoDocumentoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PolizaJuridica.Data.FiadorF", b =>
                {
                    b.HasOne("PolizaJuridica.Data.FisicaMoral", "fisicaMoral")
                        .WithMany()
                        .HasForeignKey("FisicaMoralId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PolizaJuridica.Data.FiadorM", b =>
                {
                    b.HasOne("PolizaJuridica.Data.FisicaMoral", "fisicaMoral")
                        .WithMany()
                        .HasForeignKey("FisicaMoralId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PolizaJuridica.Data.FisicaMoral", b =>
                {
                    b.HasOne("PolizaJuridica.Data.Solicitud", "Solicitud")
                        .WithMany()
                        .HasForeignKey("SolicitudId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PolizaJuridica.Data.MenuP", b =>
                {
                    b.HasOne("PolizaJuridica.Data.Area", "Area")
                        .WithMany()
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PolizaJuridica.Data.MenuP", "MenuPPadre")
                        .WithMany("Children")
                        .HasForeignKey("MenuPPadreId");
                });

            modelBuilder.Entity("PolizaJuridica.Data.PersonasOcupanInm", b =>
                {
                    b.HasOne("PolizaJuridica.Data.FisicaMoral", "fisicaMoral")
                        .WithMany()
                        .HasForeignKey("FisicaMoralId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PolizaJuridica.Data.TipoParentesco", "TipoParentesco")
                        .WithMany()
                        .HasForeignKey("TipoParentescoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PolizaJuridica.Data.Poliza", b =>
                {
                    b.HasOne("PolizaJuridica.Data.FiadorF", "FiadorF")
                        .WithMany()
                        .HasForeignKey("FiadorFId");

                    b.HasOne("PolizaJuridica.Data.FiadorM", "FiadorM")
                        .WithMany()
                        .HasForeignKey("FiadorMId");

                    b.HasOne("PolizaJuridica.Data.FisicaMoral", "FisicaMoral")
                        .WithMany()
                        .HasForeignKey("FisicaMoralId");

                    b.HasOne("PolizaJuridica.Data.PolizaEstatus", "polizaEstatus")
                        .WithMany()
                        .HasForeignKey("PolizaEstatusId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PolizaJuridica.Data.RefArrendamiento", b =>
                {
                    b.HasOne("PolizaJuridica.Data.FisicaMoral", "fisicaMoral")
                        .WithMany()
                        .HasForeignKey("FisicaMoralId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PolizaJuridica.Data.ReferenciaComercial", b =>
                {
                    b.HasOne("PolizaJuridica.Data.FisicaMoral", "fisicaMoral")
                        .WithMany()
                        .HasForeignKey("FisicaMoralId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PolizaJuridica.Data.TipoRefComercial", "tipoRefComercial")
                        .WithMany()
                        .HasForeignKey("TipoRefComercialId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PolizaJuridica.Data.ReferenciaPersonal", b =>
                {
                    b.HasOne("PolizaJuridica.Data.FisicaMoral", "fisicaMoral")
                        .WithMany()
                        .HasForeignKey("FisicaMoralId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PolizaJuridica.Data.TipoRefPersonal", "tipoRefPersonal")
                        .WithMany()
                        .HasForeignKey("TipoRefPersonalId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PolizaJuridica.Data.Solicitud", b =>
                {
                    b.HasOne("PolizaJuridica.Data.CentroCostos", "CentroCostos")
                        .WithMany()
                        .HasForeignKey("CentroCostosId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PolizaJuridica.Data.Estados", "Estados")
                        .WithMany()
                        .HasForeignKey("EstadosId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PolizaJuridica.Data.TipoInmobiliario", "TipoInmobiliario")
                        .WithMany()
                        .HasForeignKey("TipoInmobiliarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PolizaJuridica.Data.Usuarios", b =>
                {
                    b.HasOne("PolizaJuridica.Data.Area", "Area")
                        .WithMany()
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PolizaJuridica.Data.Representacion", "Representacion")
                        .WithMany()
                        .HasForeignKey("RepresentacionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PolizaJuridica.Data.UsuariosSolicitud", b =>
                {
                    b.HasOne("PolizaJuridica.Data.Solicitud", "Solicitud")
                        .WithMany()
                        .HasForeignKey("SolicitudId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PolizaJuridica.Data.Usuarios", "Usuarios")
                        .WithMany()
                        .HasForeignKey("UsuariosId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
